using UnityEngine;
using utility;

public class InvulnerabilityOnHitModification : BaseModification
{
    public override string Name => "Линза неуязвимости";
    public override string Description => "Короткая неуязвимость при получении урона";
    public override Material Material => Resources.Load<Material>("Materials/DefenseLens");
    public override Rarity Rarity => Rarity.Rare;

    private float _lastHitTime = -1f; // Use -1 to indicate never hit

    public override float ModifyIncomingDamage(AliveState aliveState, float damage)
    {
        if (Time.time - _lastHitTime < 3f)
        {
            // TODO: Architectural violation - sound effects should ideally be handled through an event system
            // Currently needed for player-specific audio feedback
            var player = aliveState.Transform.GetComponent<Player>();
            if (player?.denyDamageSound != null)
            {
                player.denyDamageSound.Play();
            }
            return 0; // Negate the damage
        }

        _lastHitTime = Time.time;
        return damage; // Apply damage normally
    }
}
